@name Anti-Nebual Defenses
@inputs
@outputs 
@persist
@trigger 

runOnChat(1)

Chars = format("%c%c%c%c%c%c%c%c%c%c%c", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)
S1 = Chars[1]
S2 = Chars[2]
S3 = Chars[3]
S6 = Chars[6]
S7 = Chars[7]
S10 = Chars[10]
S11 = Chars[11]
EmptyTable = S2 + S1

if (first() | duped()) {
    gSetGroup("E2POC")
    gShare(1)
    dsSetScope(2)
    
    GT = gTable("E2POC", 1)
    GT["Wiped", table] = table()
    GT["WipeQueue", array] = array()

#ifdef array:pushGeneric(generic)
    EntityGeneric = S2
        EntityGeneric += S7 + "nbuffer" + S1
            EntityGeneric += S7 + "buffer" + S1
        EntityGeneric += S7 + "n_buffer" + S1
            EntityGeneric += S7 + "_buffer" + S1
        EntityGeneric += S7 + "noriginal" + S1
            EntityGeneric += S7 + "original" + S1
        EntityGeneric += S7 + "n_original" + S1
            EntityGeneric += S7 + "_original" + S1
        EntityGeneric += S7 + "ggeneric" + S1
            EntityGeneric += S2
                EntityGeneric += S7 + "realType" + S1
                    EntityGeneric += S7 + "t" + S1
                EntityGeneric += S7 + "data" + S1
                    EntityGeneric += S10
                        EntityGeneric += "%entid%"
                    EntityGeneric += S1
            EntityGeneric += S1
        EntityGeneric += S7 + "ggtable" + S1
            EntityGeneric += S2
                EntityGeneric += S7 + "realType" + S1
                    EntityGeneric += S7 + "t" + S1
                EntityGeneric += S7 + "data" + S1
                    EntityGeneric += S10
                        EntityGeneric += "%entid%"
                    EntityGeneric += S1
            EntityGeneric += S1
        EntityGeneric += S7 + "ggarray" + S1
            EntityGeneric += S2
                EntityGeneric += S7 + "realType" + S1
                    EntityGeneric += S7 + "r" + S1
                EntityGeneric += S7 + "data" + S1
                    EntityGeneric += S10
                        EntityGeneric += entity():id()
                    EntityGeneric += S1
            EntityGeneric += S1
    EntityGeneric += S1
    
    Table = glonDecodeTable(EntityGeneric:replace("%entid%", toString(entity():id())))
    Generic = Table:generic("gtable")
    EntityTable = (Generic[table])
    GT["Table", table] = EntityTable
    gSetStr("EntityGeneric", EntityGeneric)
#endif
    gSetEnt("Owner", owner())
    
    ContextString = ""
    OriginalContextString = ""
    
    ContextString += S2
        ContextString += S7 + "ccontext" + S1
            ContextString += S2
                ContextString += S7 + "vclk" + S1
                    ContextString += EmptyTable
                ContextString += S7 + "data" + S1
                    ContextString += EmptyTable
                ContextString += S7 + "prfcount" + S1
                    ContextString += S6 + "0" + S1
                ContextString += S7 + "prfbench" + S1
                    ContextString += S6 + "0" + S1
                ContextString += S7 + "triggercache" + S1
                    ContextString += EmptyTable
                ContextString += S7 + "data" + S1
                    ContextString += S2
                        ContextString += S7 + "currentsound" + S1
                            ContextString += EmptyTable
                        ContextString += S7 + "datasignal" + S1
                            ContextString += S2
                                ContextString += S7 + "scope" + S1
                                    ContextString += S6 + "2" + S1
                            ContextString += S1
                        ContextString += S7 + "EGP" + S1
                            ContextString += S2
                                ContextString += S7 + "UpdatesNeeded" + S1
                                    ContextString += EmptyTable
                            ContextString += S1
                        ContextString += S7 + "find" + S1
                            ContextString += S2
                                ContextString += S7 + "bl_entity" + S1
                                    ContextString += EmptyTable
                                ContextString += S7 + "bl_owner" + S1
                                    ContextString += EmptyTable
                                ContextString += S7 + "bl_model" + S1
                                    ContextString += EmptyTable
                                ContextString += S7 + "bl_class" + S1
                                    ContextString += EmptyTable
                                ContextString += S7 + "wl_entity" + S1
                                    ContextString += EmptyTable
                                ContextString += S7 + "wl_owner" + S1
                                    ContextString += EmptyTable
                                ContextString += S7 + "wl_model" + S1
                                    ContextString += EmptyTable
                                ContextString += S7 + "wl_class" + S1
                                    ContextString += EmptyTable
                            ContextString += S1
                        ContextString += S7 + "findcount" + S1
                            ContextString += S6 + "1e1000" + S1
                        ContextString += S7 + "findnext" + S1
                            ContextString += S6 + "0" + S1
                        ContextString += S7 + "gvars" + S1
                            ContextString += S2
                                ContextString += S7 + "group" + S1
                                    ContextString += S7 + "E2POC" + S1
                                ContextString += S7 + "shared" + S1
                                    ContextString += S6 + "1" + S1
                            ContextString += S1
                        ContextString += S7 + "lookup" + S1
                            ContextString += EmptyTable
                        ContextString += S7 + "timer" + S1
                            ContextString += S2
                                ContextString += S7 + "timerid" + S1
                                    ContextString += S6 + "0" + S1
                                ContextString += S7 + "timers" + S1
                                    ContextString += "%timers%"
                            ContextString += S1
                        ContextString += S7 + "holos" + S1
                            ContextString += "%holos%"
                    ContextString += S1
                ContextString += S7 + "prf" + S1
                    ContextString += S6 + "%ops%" + S1
                ContextString += S7 + "player" + S1
                    ContextString += S10 + "%owner%" + S1
                ContextString += S7 + "entity" + S1
                    ContextString += S10 + "%entid%" + S1
                ContextString += S7 + "vars" + S1
                    ContextString += "%vars%"
        ContextString += S1
    ContextString += S1
    # %holos%, %ops%, %owner%, %entid%, %vars%
    
    OriginalContextString = ContextString:replace("%ops%", "0")
    OriginalContextString = OriginalContextString:replace("%holos%", EmptyTable)
    OriginalContextString = OriginalContextString:replace("%owner%", toString(owner():id()))
    OriginalContextString = OriginalContextString:replace("%entid%", toString(entity():id()))
    OriginalContextString = OriginalContextString:replace("%vars%", EmptyTable)
    OriginalContextString = OriginalContextString:replace("%timers%", EmptyTable)
    gSetStr("OriginalContext", OriginalContextString)
    gSetStr("ContextTemplate", ContextString)
    gSetStr("ContextEmptyTable", EmptyTable)
    
    gSetEnt("ToWipe", entity())
}

if ((dsClk() | gGetNum("ExpectingDS")) &
    !gGetNum("RestartingTimer")) {
    RestoreState = 0
    if (gGetStr("State") == "Wiping") {
        stoptimer("original")
        stoptimer("_original")
        stoptimer("buffer")
        stoptimer("_buffer")
        RestoreState = 1
        print("Wiping entity " + gGetEnt("ToWipe"):id() + ".")
        gSetEnt("ToWipe", noentity())
        gSetStr("State", "None")
    }
    
    if (RestoreState) {
        gSetNum("ClearExpectingDS", 1)
        GT = gTable("E2POC", 1)
        NewContext = glonDecodeTable(gGetStr("OriginalContext"))["context", complex]
        EntityTable = GT["Table", table]
        EntityTable["ontext", complex] = NewContext
    }
} else {
    gSetNum("RestartingTimer", 0)
    stoptimer("interval")
    interval(100)
}

if (chatClk() & !dsClk() & !gGetNum("ExpectingDS")) {
    if (lastSpoke() == gGetEnt("Owner")) {
        LastSaid = lastSaid()
        if (LastSaid:sub(1, 1) == "!") {
            hideChat(1)
            LastSaid = LastSaid:sub(2)
            Parts = LastSaid:explode(" ")
            Arguments = LastSaid:sub(Parts[1, string]:length() + 2)
            Command = Parts[1, string]
            if (Command == "test") {
                GT = gTable("E2POC", 1)
                EntityTable = GT["Table", table]
                print(EntityTable)
            }
        }
    }
}

if (!gGetNum("ExpectingDS") &
    !gGetNum("ClearExpectingDS") &
    !dsClk()) {
    GT = gTable("E2POC", 1)
    if (findCanQuery()) {
        findByClass("gmod_wire_expression2")
        R = findToArray()
        R:pushEntity(entity())
        for (I = 1, R:count()) {
            if (R[I, entity]:owner() == owner()) {
                if (R[I, entity]:getColor() != vec(0, 255, 0) &
                    R[I, entity]:getColor() != vec(255, 0, 0)) {
                    if (GT["Wiped", table][toString(R[I, entity]:id()), entity] != R[I, entity]) {
                        Table = GT["Wiped", table]
                        Table[toString(R[I, entity]:id()), entity] = R[I, entity]
                        Array = GT["WipeQueue", array]
                        Array:pushEntity(R[I, entity])
                    }
                } else {
                    if (GT["Wiped", table][toString(R[I, entity]:id()), entity] == R[I, entity]) {
                        print("Marking entity " + R[I, entity]:id() + " as unwiped.")
                        Table = GT["Wiped", table]
                        Table[toString(R[I, entity]:id()), entity] = noentity()
                    }
                }
            }
        }
    }
    Array = GT["WipeQueue", array]
    if (Array:count()) {
        Entity = Array:shiftEntity()
        
        Context = gGetStr("ContextTemplate")
        Context = Context:replace("%ops%", "0")
        Context = Context:replace("%entid%", toString(entity():id()))
        Context = Context:replace("%owner%", toString(owner():id()))
        Context = Context:replace("%vars%", EmptyTable)
        Context = Context:replace("%holos%", EmptyTable)
        Context = Context:replace("%timers%", S10 + Entity:id() + S1)
        EntityTable = GT["Table", table]
        EntityTable["ontext", complex] = glonDecodeTable(Context)["context", complex]
        gSetEnt("ToWipe", Entity)
        gSetNum("ExpectingDS", 1)
        gSetStr("State", "Wiping")
        dsSendDirect("", entity(), "")
    }
}

if (gGetNum("ExpectingDS")) {
    stoptimer("interval")
}

if (gGetNum("ClearExpectingDS")) {
    gSetNum("ClearExpectingDS", 0)
    gSetNum("ExpectingDS", 0)
    gSetNum("RestartingTimer", 1)
    dsSendDirect("", entity(), "")
}
